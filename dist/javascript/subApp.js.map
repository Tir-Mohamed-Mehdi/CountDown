{"version":3,"file":"javascript/subApp.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACO;AACA;AACA;AACA;AACP;AACA;AACA;AACO;AACA;AACP;AACA;AACO;AACA;AACA;AACP;AACA;AACO;AACA;AACA;AACA;AACP;AACA;AACO;AACP;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;UCxCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNa;AACb;AACiC;AACjC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP,EAAE,6DAAuB;AACzB,EAAE,6DAAuB;AACzB,EAAE,oEAA8B;AAChC;AACA,EAAE,sDAAgB;AAClB;AACA;AACA,IAAI,gEAA0B;AAC9B,IAAI,iEAA2B;AAC/B,GAAG;AACH;AACA;AACA;AACO;AACP,EAAE,6DAAuB;AACzB,EAAE,gEAA0B;AAC5B;AACA;AACA,IAAI,gEAA0B;AAC9B,IAAI,6DAAuB;AAC3B,GAAG;AACH;AACA;AACA;AACO;AACP,EAAE,8DAAwB;AAC1B,EAAE,gEAA0B;AAC5B,EAAE,+DAAyB;AAC3B;AACA,EAAE,kEAA4B;AAC9B,EAAE,oEAA8B;AAChC;AACA;AACA;AACO;AACP,EAAE,qEAA+B;AACjC,EAAE,iEAA2B;AAC7B;AACA;AACA;AACO;AACP,EAAE,kEAA4B;AAC9B;AACA;AACA;AACO;AACP,EAAE,6DAAuB,MAAM,IAAI,GAAG,MAAM,GAAG,KAAK;AACpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2DAAqB,OAAO,KAAK,IAAI,2DAAqB;AACxE,eAAe,4DAAsB,OAAO,MAAM,IAAI,4DAAsB;AAC5E,aAAa,0DAAoB,OAAO,IAAI,IAAI,0DAAoB;AACpE,cAAc,2DAAqB,OAAO,KAAK,IAAI,2DAAqB;AACxE,aAAa,6DAAuB,OAAO,IAAI,IAAI,6DAAuB;AAC1E,aAAa,0DAAoB,OAAO,IAAI,IAAI,0DAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,+DAAyB,MAAM,WAAW;AAC5C;AACA;AACA;AACA,qC","sources":["webpack://mini_challenge_num_12_countdown_timer/./src/javascript/variables.js","webpack://mini_challenge_num_12_countdown_timer/webpack/bootstrap","webpack://mini_challenge_num_12_countdown_timer/webpack/runtime/define property getters","webpack://mini_challenge_num_12_countdown_timer/webpack/runtime/hasOwnProperty shorthand","webpack://mini_challenge_num_12_countdown_timer/webpack/runtime/make namespace object","webpack://mini_challenge_num_12_countdown_timer/./src/javascript/subApp.js"],"sourcesContent":["//- DATE -------------->\r\nconst theTime = new Date();\r\nexport const theDay = theTime.getDate();\r\nexport const theMonth = theTime.getMonth();\r\nexport const theYear = theTime.getFullYear();\r\nexport const theDateMsec = theTime.getTime();\r\n\r\n\r\n//- buttons ----------->\r\nexport const selectButton = document.querySelector('.submit');\r\nexport const resetButton = document.querySelector('.reset');\r\n\r\n//- inputs ------------>\r\nexport const dayInput = document.querySelector('.day');\r\nexport const monthInput = document.querySelector('.month');\r\nexport const yearInput = document.querySelector('.year');\r\n\r\n//- messages ---------->\r\nexport const infoMsg = document.querySelector('.info');\r\nexport const calcMsg = document.querySelector('.calc');\r\nexport const NumErrorMsg = document.querySelector('.error_num');\r\nexport const doneMsg = document.querySelector('.done');\r\n\r\n//- parts ------------->\r\nexport const lowerPart = document.querySelector('.mask');\r\n\r\n//- date count ------>\r\nexport const yearCount = document.querySelector('.yearDes');\r\nexport const monthCount = document.querySelector('.monthDes');\r\nexport const dayCount = document.querySelector('.dayDes');\r\nexport const hourCount = document.querySelector('.hourDes');\r\nexport const minuteCount = document.querySelector('.minuteDes');\r\nexport const secCount = document.querySelector('.secDes');\r\n\r\n//- date display ---->\r\nexport const dateDisplay = document.querySelector(\".date_text span\");\r\n\r\n//- progress bar ---->\r\nexport const progressBar = document.querySelector('.progress');\r\n\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\n//- importing variables.\r\nimport * as v from './variables';\r\n\r\n//- reset all the inputs values.\r\nexport function resetInputs() {\r\n  document.querySelector('.day').value = \"\";\r\n  document.querySelector('.month').value = \"\";\r\n  document.querySelector('.year').value = \"\";\r\n};\r\n\r\n//- show the error message.\r\nexport function showError() {\r\n  v.calcMsg.classList.add('hide');\r\n  v.infoMsg.classList.add('hide');\r\n  v.NumErrorMsg.classList.remove('hide');\r\n\r\n  v.dayInput.focus();\r\n\r\n  setTimeout(() => {\r\n    v.infoMsg.classList.remove('hide');\r\n    v.NumErrorMsg.classList.add('hide');\r\n  }, 3000);\r\n};\r\n\r\n//- show success message.\r\nexport function showSuccess() {\r\n  v.infoMsg.classList.add('hide');\r\n  v.doneMsg.classList.remove('hide');\r\n\r\n  setTimeout(() => {\r\n    v.calcMsg.classList.remove('hide');\r\n    v.doneMsg.classList.add('hide');\r\n  }, 3000);\r\n};\r\n\r\n//- disable inputs and hide select button.\r\nexport function disableInputs() {\r\n  v.dayInput.classList.add('disableInput');\r\n  v.monthInput.classList.add('disableInput');\r\n  v.yearInput.classList.add('disableInput');\r\n\r\n  v.selectButton.classList.add('hide');\r\n  v.resetButton.classList.remove('hide');\r\n};\r\n\r\n//- show select button and hide reset button.\r\nexport function resetButtons() {\r\n  v.selectButton.classList.remove('hide');\r\n  v.resetButton.classList.add('hide');\r\n};\r\n\r\n//- show lower part of the container.\r\nexport function showLowerPart() {\r\n  v.lowerPart.classList.remove('hide');\r\n};\r\n\r\n//- display the selected date.\r\nexport function displayDate(day, month, year) {\r\n  v.dateDisplay.innerText = `${day}/${month}/${year}`;\r\n};\r\n\r\n//- calculate the deferent between dates.\r\nexport function dateDeferent(selectedDate) {\r\n  let interval = setInterval(() => {\r\n    let theDeferent = selectedDate - new Date().getTime();\r\n\r\n    const years = theDeferent / 31_556_952_000;\r\n    const months = (years - Math.floor(years)) * 12;\r\n    const days = (months - Math.floor(months)) * 30;\r\n    const hours = (days - Math.floor(days)) * 24;\r\n    const min = (hours - Math.floor(hours)) * 60;\r\n    const sec = (min - Math.floor(min)) * 60;\r\n\r\n    dateTimeDisplay(floorNum(years), floorNum(months), floorNum(days), floorNum(hours), floorNum(min), floorNum(sec));\r\n\r\n    progressBar(selectedDate - new Date().getTime());\r\n\r\n    if (theDeferent < 0) {\r\n      clearInterval(interval);\r\n    };\r\n  }, 1000);\r\n};\r\n\r\n//_ ------------------------>\r\n//! Sub Functions ---------->\r\n//_ ------------------------>\r\n\r\n// return the correct number.\r\nfunction floorNum(num) {\r\n  return Math.floor(num);\r\n};\r\n\r\n// display date on screen.\r\nfunction dateTimeDisplay(year, month, day, hour, min, sec) {\r\n  year < 10 ? v.yearCount.innerText = `0${year}` : v.yearCount.innerText = year;\r\n  month < 10 ? v.monthCount.innerText = `0${month}` : v.monthCount.innerText = month;\r\n  day < 10 ? v.dayCount.innerText = `0${day}` : v.dayCount.innerText = day;\r\n  hour < 10 ? v.hourCount.innerText = `0${hour}` : v.hourCount.innerText = hour;\r\n  min < 10 ? v.minuteCount.innerText = `0${min}` : v.minuteCount.innerText = min;\r\n  sec < 10 ? v.secCount.innerText = `0${sec}` : v.secCount.innerText = sec;\r\n\r\n};\r\n\r\n// counting and changing progress bar. \r\nfunction progressBar(selectedDate) {\r\n  const percentage = (100 / (selectedDate / 1000));\r\n  v.progressBar.style.width = `${percentage}%`;\r\n\r\n  console.log(percentage);\r\n};\r\n// progressBar(new Date().getTime());"],"names":[],"sourceRoot":""}